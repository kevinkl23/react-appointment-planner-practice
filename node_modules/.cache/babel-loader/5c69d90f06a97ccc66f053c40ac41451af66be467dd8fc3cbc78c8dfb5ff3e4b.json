{"ast":null,"code":"var _jsxFileName = \"/Users/kevinkl23/Projects/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = _ref => {\n  _s();\n  let {\n    contacts,\n    addContacts\n  } = _ref;\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const isInitialRender = useRef(true);\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n  const handlePhoneChange = event => {\n    setPhone(event.target.value);\n  };\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n  const clearForm = () => {\n    setName('');\n    setPhone('');\n    setEmail('');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\n    const isDuplicate = contacts.filter(contact => {\n      return contact.name === name && contact.phone === phone && contact.email === email;\n    });\n    if (isDuplicate.length > 0) {\n      alert('Contact is already added');\n    } else {\n      addContacts(name, phone, email);\n    }\n  };\n\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\n\n  useEffect(() => {\n    if (isInitialRender.current) {\n      isInitialRender.current = false;\n      return;\n    }\n    const findName = contacts.find(contact => {\n      return contact.name === name;\n    });\n    if (findName) {\n      clearForm();\n    } else {\n      alert('Fail to Add Contacts');\n    }\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        name: name,\n        phone: phone,\n        email: email,\n        handleNameChange: handleNameChange,\n        handlePhoneChange: handlePhoneChange,\n        handleEmailChange: handleEmailChange,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        contacts: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactsPage, \"MAXk8PYKzLJ43mbFL1f2c/NsTqg=\");\n_c = ContactsPage;\nvar _c;\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ContactForm","TileList","jsxDEV","_jsxDEV","ContactsPage","_ref","_s","contacts","addContacts","name","setName","phone","setPhone","email","setEmail","isInitialRender","handleNameChange","event","target","value","handlePhoneChange","handleEmailChange","clearForm","handleSubmit","e","preventDefault","isDuplicate","filter","contact","length","alert","current","findName","find","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kevinkl23/Projects/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ( {contacts, addContacts } ) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const isInitialRender = useRef(true);\r\n\r\n  const handleNameChange = event => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  const handlePhoneChange = event => {\r\n    setPhone(event.target.value);\r\n  }\r\n\r\n  const handleEmailChange = event => {\r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setName('');\r\n    setPhone('');\r\n    setEmail('');\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n    const isDuplicate = contacts.filter(contact => {\r\n      return (contact.name === name && contact.phone === phone && contact.email === email);\r\n    })\r\n\r\n    if(isDuplicate.length > 0) {\r\n      alert('Contact is already added');\r\n    }\r\n    else {\r\n      addContacts(name, phone, email);\r\n    }\r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  useEffect(() => {\r\n    if (isInitialRender.current) {\r\n      isInitialRender.current = false;\r\n      return;\r\n    }\r\n\r\n    const findName = contacts.find(contact => {\r\n      return contact.name === name;\r\n    })\r\n\r\n    if(findName) {\r\n      clearForm();\r\n    }\r\n    else{\r\n      alert('Fail to Add Contacts');\r\n    }\r\n  }, [contacts]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm name={name} phone={phone} email={email} handleNameChange={handleNameChange} handlePhoneChange={handlePhoneChange} handleEmailChange={handleEmailChange} handleSubmit={handleSubmit}/>\r\n      </section>\r\n      <hr />\r\n      <section> \r\n        <h2>Contacts</h2>\r\n        <TileList contacts={contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}