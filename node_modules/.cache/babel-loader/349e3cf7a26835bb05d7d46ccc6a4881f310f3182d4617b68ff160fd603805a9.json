{"ast":null,"code":"var _jsxFileName = \"/Users/kevinkl23/Projects/appointment-planner-starting-v18/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [contacts, setContacts] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  const addContacts = (name, phone, email) => {\n    const data = {\n      name: name,\n      phone: phone,\n      email: email\n    };\n    setContacts(prevData => [...prevData, data]);\n  };\n  const addAppointments = (name, contact, date, time) => {\n    const data = {\n      name: name,\n      contact: contact,\n      date: date,\n      time: time\n    };\n    setAppointments(prevData => [...prevData, data]);\n  };\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"contacts\",\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        contacts: contacts,\n        addContacd: addContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 40\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        contacts: contacts,\n        appointments: appointments,\n        addAppointments: addAppointments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 51\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ilNV2NNtl3t/F9tV3D6w+C6XRbg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","useState","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","appointments","setAppointments","addContacts","name","phone","email","data","prevData","addAppointments","contact","date","time","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","addContacd","APPOINTMENTS","_c","$RefreshReg$"],"sources":["/Users/kevinkl23/Projects/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n const [contacts, setContacts] = useState([]);\r\n const [appointments, setAppointments] = useState([]);\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n const addContacts = (name, phone, email) => {\r\n  const data = {\r\n    name: name,\r\n    phone: phone,\r\n    email: email\r\n  }\r\n\r\n  setContacts(prevData=> [...prevData, data])\r\n }\r\n\r\n const addAppointments = (name, contact, date, time) => {\r\n  const data = {\r\n    name: name,\r\n    contact: contact, \r\n    date: date,\r\n    time: time\r\n  }\r\n\r\n  setAppointments(prevData=> [...prevData, data]);\r\n }\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path='contacts' element={ <ContactsPage contacts={contacts} addContacd={addContacts} /> /* Add props to ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage contacts={contacts} appointments={appointments} addAppointments={addAppointments}/> /* Add props to AppointmentsPage */ }/>\r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}